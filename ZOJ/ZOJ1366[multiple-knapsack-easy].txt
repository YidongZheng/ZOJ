y
 */

#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;

int ans;
int n;
int cash;
int d[100];
int nd[100];
bool found;
int powInt(int x, int y)
{
    int d,s;
    d=x,s=1;
    while(y)
    {
	if(y&1)s*=d;
	d=d*d;
	y>>=1;
    }
    return s;
}
int main()
{
    //int cash;
    //int n;
    //int d[100];
    int V[1000];
    int W[1000];
    int tempsum;
    int cnt;
    int f[100001];
    while(scanf("%d",&cash)!=EOF)
    {
	cnt=0;
	tempsum=0;
	found=false;
	ans=0;
	memset(f,0,sizeof(f));
	scanf("%d",&n);
	for(int i=0;i<n;++i)
	{
	    scanf("%d%d",&nd[i],&d[i]);
	    int j=0;
	    while(nd[i]>=powInt(2,j))
	    {
		nd[i]-=powInt(2,j);
		V[cnt]=W[cnt]=powInt(2,j)*d[i];
		cnt++;
		j++;
	    }
	    if(nd[i]>0){V[cnt]=W[cnt]=nd[i]*d[i];cnt++;}
	}
	//f[0]=0;
	for(int i=0;i<cnt;++i)
	    for(int j=cash;j>=W[i];--j)
	    {
		f[j]=f[j]>f[j-W[i]]+V[i]?f[j]:f[j-W[i]]+V[i];
	    }	
	printf("%d\n",f[cash]);
	//for(int i=0;i<cnt;++i)
	//{
	//    printf("%d\n",V[i]);
	//}
	

    }
    return 0;
}
/*
void backTrace(int cnt, int sum)
{
    if(found) return;
    if(sum>cash) return;
    if(sum==cash){ans=cash;found=true;return;}
    if(sum>ans){ans=sum;}
    if(cnt>=n) return;
    for(int i=0;i<=nd[cnt];++i)
    {
	if(sum+i*d[cnt]>cash)break;
	backTrace(cnt+1,sum+i*d[cnt]);
    }
}*/



