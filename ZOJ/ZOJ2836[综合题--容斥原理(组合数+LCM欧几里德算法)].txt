#include<iostream>
#include<cstdio>
#include<queue>
#include<set>
using namespace std;

int GCD(int a, int b)
{
    int r;
    while(b > 0)
    {
       r=a%b;
       a=b;
       b=r;
    }
    return a;
}

int LCM(int a, int b)
{
    return a/GCD(a,b) * b;
}
void next_combination(int N, int M, int Array[])
{
    int i,j;
    i=M-1;
    while(i>=0 && Array[i] == i+N-M+1)
      i--;
    //printf("%d\n",i);
       Array[i]++;
    for(j=i+1;j<M;j++)
       Array[j]=Array[i]+(j-i);
    //for(i=M-1;Array[i])
}
int Combine(int N, int M)
{
    int i,ans=1;
    for(i=0;i<M;i++)
      ans*=N-i;
    for(i=1;i<=M;i++)
      ans/=i;
    return ans;
}

int Func1(int N, int M, int Array[], int up)
{
    int len=Combine(N,M);
    int ans=0;
    int Num[]={1,2,3,4,5,6,7,8,9,10};
    multiset<int> MySet;
    multiset<int>::iterator MyIter;
    int i,j,temp;
    for(i=0;i<len;i++)
    {
        temp=1;
        for(j=0;j<M;j++)
        {
            temp=LCM(temp,Array[Num[j]-1]);
        }
        MySet.insert(temp);
        next_combination(N,M,Num);
    }
    for(MyIter=MySet.begin();MyIter!=MySet.end();MyIter++)
    {
        ans+= up / (*MyIter);
        //printf("k1=%d k2=%d\n",*MyIter,ans);
    }
    //printf("M=  %d  ans=  %d\n",M,ans);
    return ans;
}
int main()
{
    //int Array[5]={1,2};
    //int i;
    //int cnt=6;
    //while(cnt--)
    //{
    //    for(i=0;i<2;i++)
    //      printf("%d ",Array[i]);
    //    printf("\n");
    //    next_combination(4, 2, Array);
    //}
    //for(i=1;i<=10;i++)
      //printf("%d\n",Combine(10,i));
    //getchar();
    int N,M,i,j;
    int cnt,temp,ans;
    int Array[10];
    //int Mul[300];
    //set<int> MySet;
   // set<int>::iterator MyIter;
    while(scanf("%d%d",&N,&M) != EOF)
    {
        //scanf("%d",&lcm);
        //MySet.clear();
        cnt=0;
        ans=0;
        for(i=0;i<N;i++)
        {
           scanf("%d",&Array[i]);
           //MySet.insert(temp);
        }
        //for(MyIter=MySet.begin();MyIter!=MySet.end();MyIter++)
        //{
        //    Array[cnt++]=*MyIter;
        //}
        //for(i=0;i<cnt;i++)
        //{
         //   printf("%d\n",Array[i]);
        //}
        for(i=1;i<=N;i++)
        {
            if(i%2)
            {
                ans+=Func1(N,i,Array,M);
            }
            else
                ans-=Func1(N,i,Array,M);
        }
        printf("%d\n",ans);
    }
    return 0;
}
