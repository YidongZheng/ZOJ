#include <stdio.h>
#include <string.h>
#include <bitset>

using namespace std;
int prime[5000];
//bool visited[46341];
bitset<46341> mybs;
int prime_table(int n)
{
	//memset(visited,0,sizeof(visited));
	mybs.reset();
	int cnt=0;
	prime[cnt++]=2;
	for(int i=3;i<=n;i+=2)
	{
		if(!mybs.test(i))
		{
			prime[cnt++]=i;
			for(int s=2*i,j=i*i;j<=n;j+=s)
				mybs.set(j);
		}
	}
	return cnt;
}

int main()
{
	//freopen("out.txt","w",stdout);
	int cnt=prime_table(46340);
	int m,n;
	//for(int i=0;i<cnt;++i)
	//	printf("%d\n",prime[i]);
	while(~scanf("%d%d",&n,&m))
	{
		int tmp=m;
		int tmpc=0;
		if(n==0)
		{
			if(m==1)
				printf("%d divides %d!\n",m,n);
			else
				printf("%d does not divide %d!\n",m,n);
			continue;
		}
		else if(m==0)
		{
			printf("%d does not divide %d!\n",m,n);
			continue;
		}
		while(tmp!=1&&tmpc<cnt)
		{
			while(tmp%prime[tmpc]==0)
				tmp/=prime[tmpc];
			tmpc++;
		}
		if(tmp!=1)
		{
			if(n>=tmp) 
				printf("%d divides %d!\n",m,n);
			else 
				printf("%d does not divide %d!\n",m,n);
		}
		else
		{
			bool div=false;
			int tmpn=(n<=92680?n:92680);
			long long ans=1;
			for(int i=1;i<=tmpn;++i)
			{
				ans*=i;
				if(ans>=m)ans%=m;
				if(ans==0)div=true;
			}
			if(div)
				printf("%d divides %d!\n",m,n);
			else
				printf("%d does not divide %d!\n",m,n);
		}
	}
	return 0;
}

