/* ZOJ Problem Set - 3635
 * Cinema in Akiba
 * zyd 2012-12-20
 * binary-indexed-tree & binary-search
 * easy 
 */
#include<iostream>
#include<cstdio>
#define MAX 50000
using namespace std;

int C[MAX+1];
int N;
int lowbit(int x)
{
    return x&(-x);
}
int add(int i,int val)
{
    for(;i<=N;i+=lowbit(i))
	C[i]+=val;
}
int sumOf(int i)
{
    int sum=0;
    for(;i>0;i-=lowbit(i))
	sum+=C[i];
    return sum;
}
void init()
{
    int i;
    for(i=1;i<=N;i++)
	C[i]=0;
}
int main()
{
    int m;
    int ans[50001];
    int ticket;
    while(scanf("%d",&N)!=EOF)
    {
	init();
	for(int i=1;i<=N;i++)
	    add(i,1);
	int l,r,mid;
	for(int i=1;i<=N;i++)
	{
	    scanf("%d",&ticket);
	    l=1,r=N;
	    while(l<r)
	    {
		mid=(l+r)/2;
		if(sumOf(mid)<ticket)
		{
		    l=mid+1;
		}
		else
		{
		    r=mid;
		}
	    }
	    ans[i]=l;
	    add(l,-1);
	}
	scanf("%d",&m);
	int query;
	for(int i=1;i<=m;i++)
	{
	    scanf("%d",&query);
	    printf("%d",ans[query]);
	    if(i!=m) printf(" ");
	    else printf("\n");
	}
    }
    return 0;
}
