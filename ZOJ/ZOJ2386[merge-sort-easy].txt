/* ZOJ Problem Set - 2386
 * Ultra-QuickSort
 * zyd 2012-12-27
 * inverse pair,merge sort
 * easy
 */
#include<stdio.h>

void msort(int left,int right);
void merge(int left,int mid,int right);
int A[500000];
int lt[500000];
long long ans=0;
int main()
{
    int n,i;
    while(scanf("%d",&n)!=EOF)
    {
	if(n==0) break;
	ans=0;
	for(i=0;i<n;i++)
	    scanf("%d",&A[i]);
	msort(0,n-1);
	printf("%lld\n",ans);
    }
    return 0;
}

void msort(int left,int right)
{
    int mid=(left+right)/2;

    if(left<right)
    {
	msort(left,mid);
	msort(mid+1,right);
	merge(left,mid,right);
    }
    return;
}
void merge(int left,int mid,int right)
{
    int l,r,i;
    l=left;
    r=mid+1;
    for(i=left;i<=right;++i)
    {
	if((l<=mid)&&(r>right||A[l]<=A[r]))
	{
	    lt[i++]=A[l];
	}
	else
	{
	    lt[i++]=A[r];
	    ans+=mid-l+1;
	}
    }
    for(i=left;i<=right;++i)
    {
	A[i]=lt[i];
    }
    return;
}
