/*   
 *ZOJ Problem Set - 1311   Network
 *Zheng Yidong 2013-3-1  
 *graph  articulation points--tarjan algorithm  easy
 */

#include <cstdio>
#include <cstring>
#include <iostream>
#include <vector>
#include <set>
#include <cstdlib>

#define MAX 110

using namespace std;

vector<int> vt[MAX];
set<int> st;
int dfn[MAX],low[MAX],n,tot,ans;

void tarjan(int x, int fa)
{
    dfn[x]=low[x]=++tot;
    for(int i=0;i<vt[x].size();++i)
    {
        int y=vt[x][i];
        if(!dfn[y])
        {
            tarjan(y,x);
            low[x]=min(low[x],low[y]);
            if((x!=1&&low[y]>=dfn[x])||(x==1&&dfn[y]>2))
                st.insert(x);
        }
        else
            if(y!=fa)
                low[x]=min(low[x],dfn[y]);
    }
}

int main()
{
    //freopen("in.txt","r",stdin);
    //freopen("out.txt","w",stdout);
    char str[1000];
    while(~scanf("%d",&n)&&n)
    {
        for(int i=1;i<=n;++i)
            vt[i].clear();
        gets(str);//read '\n'
        while(gets(str)&&strcmp(str,"0"))
        {
            char *p=strtok(str," ");
            int x=atoi(p);
            while(p=strtok(NULL," "))
            {
                int tmp=atoi(p);
                vt[x].push_back(tmp);
                vt[tmp].push_back(x);
            }
        }
        ans=tot=0;
        st.clear();
        memset(dfn,0,sizeof(dfn));
        memset(low,0,sizeof(low));
        tarjan(1,0);
        printf("%d\n",st.size());
    }
    return 0;
}
